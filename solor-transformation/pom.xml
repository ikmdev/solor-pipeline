<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>dev.ikm.tinkar.data</groupId>
        <artifactId>SOLOR</artifactId>
        <version>1.0.0-SNAPSHOT</version>
    </parent>

    <artifactId>solor-transformation</artifactId>
    <packaging>pom</packaging>

    <name>solor-transformation</name>
    <url>http://maven.apache.org</url>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-clean-plugin</artifactId>
                <executions>
                    <execution>
                        <id>clean</id>
                        <phase>clean</phase>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                        <configuration>
                            <filesets>
                                <fileset>
                                    <directory>${dataStoreLocation}/${tinkar-starter-data.artifactId}-${tinkar-starter-data.version}-${tinkar-starter-data.classifier}</directory>
                                    <includes>
                                        <include>**</include>
                                    </includes>
                                    <followSymlinks>false</followSymlinks>
                                </fileset>
                                <fileset>
                                    <directory>${dataStoreLocation}/${dataStore}</directory>
                                    <includes>
                                        <include>**</include>
                                    </includes>
                                    <followSymlinks>false</followSymlinks>
                                </fileset>
                            </filesets>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-tinkar-starter-data-dependency</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>${tinkar-starter-data.groupId}</groupId>
                                    <artifactId>${tinkar-starter-data.artifactId}</artifactId>
                                    <version>${tinkar-starter-data.version}</version>
                                    <classifier>${tinkar-starter-data.classifier}</classifier>
                                    <type>zip</type>
                                    <overWrite>true</overWrite>
                                    <outputDirectory>${dataStoreLocation}/input-data</outputDirectory>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- Starter Data -->
            <plugin>
                <groupId>dev.ikm.maven.tinkar</groupId>
                <artifactId>tinkar-maven-plugin</artifactId>
                <version>${maven-artifacts.version}</version>
                <configuration>
                    <dataStore>${dataStoreLocation}/${dataStore}</dataStore>
                    <isolate>false</isolate>
                </configuration>
                <executions>
                    <execution>
                        <id>load-tinkar-starter-data</id>
                        <phase>install</phase>
                        <goals>
                            <goal>load-data</goal>
                        </goals>
                        <configuration>
                            <fileset>
                                <directory>${dataStoreLocation}/input-data</directory>
                                <includes>
                                    <include>**/*-${tinkar-starter-data.classifier}.zip</include>
                                </includes>
                            </fileset>
                            <isolate>false</isolate>
                        </configuration>
                    </execution>
                    <execution>
                        <id>load-rxnorm-starter-data</id>
                        <phase>install</phase>
                        <goals>
                            <goal>load-data</goal>
                        </goals>
                        <configuration>
                            <fileset>
                                <directory>${starterSetLocation}</directory>
                                <includes>
                                    <include>**/${rxnorm.starterSet}</include>
                                </includes>
                            </fileset>
                            <isolate>false</isolate>
                        </configuration>
                    </execution>
                    <execution>
                        <id>load-data-gudid-starter-set</id>
                        <phase>install</phase>
                        <goals>
                            <goal>load-data</goal>
                        </goals>
                        <configuration>
                            <dataStore>${dataStoreLocation}/${dataStore}</dataStore>
                            <fileset>
                                <directory>${starterSetLocation}</directory>
                                <includes>
                                    <include>**/${gudid.starterSet}</include>
                                </includes>
                            </fileset>
                            <isolate>false</isolate>
                        </configuration>
                    </execution>
                    <execution>
                        <id>load-data-gudid-change-set</id>
                        <phase>install</phase>
                        <goals>
                            <goal>load-data</goal>
                        </goals>
                        <configuration>
                            <dataStore>${dataStoreLocation}/${dataStore}</dataStore>
                            <fileset>
                                <directory>${starterSetLocation}</directory>
                                <includes>
                                    <include>**/${gudid.changeSet}</include>
                                </includes>
                            </fileset>
                            <isolate>false</isolate>
                        </configuration>
                    </execution>
                    <execution>
                        <id>load-data-dex-starter-set</id>
                        <phase>install</phase>
                        <goals>
                            <goal>load-data</goal>
                        </goals>
                        <configuration>
                            <dataStore>${dataStoreLocation}/${dataStore}</dataStore>
                            <fileset>
                                <directory>${starterSetLocation}</directory>
                                <includes>
                                    <include>**/${dex.starterSet}</include>
                                </includes>
                            </fileset>
                            <isolate>false</isolate>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- SNOMED-CT INT and GMDN -->
            <plugin>
                <groupId>dev.ikm.maven</groupId>
                <artifactId>snomed-ct-starterdata-maven-plugin</artifactId>
                <version>1.0.0-SNAPSHOT</version>
                <configuration>
                    <namespaceString>${snomed.origin.namespace}</namespaceString>
                    <datastorePath>${dataStoreLocation}/${dataStore}</datastorePath>
                </configuration>
                <executions>
                    <execution>
                        <id>run-snomed-starterdata</id>
                        <phase>install</phase>
                        <goals>
                            <goal>run-snomed-starterdata</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>dev.ikm.maven</groupId>
                <artifactId>snomed-ct-transformation-maven-plugin</artifactId>
                <version>1.0.0-SNAPSHOT</version>
                <configuration>
                    <namespaceString>${snomed.origin.namespace}</namespaceString>
                    <datastorePath>${dataStoreLocation}/${dataStore}</datastorePath>
                    <inputDirectoryPath>${user.home}/.m2/repository/dev/ikm/snomedct/snomed-ct-origin/${project.version}/snomed-ct-origin-${project.version}-data.zip</inputDirectoryPath>
                    <dataOutputPath>${project.build.directory}/snomed</dataOutputPath>
                </configuration>
                <executions>
                    <execution>
                        <id>run-snomed-transformation</id>
                        <phase>install</phase>
                        <goals>
                            <goal>run-snomed-transformation</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- LOINC -->
            <plugin>
                <groupId>dev.ikm.loinc</groupId>
                <artifactId>loinc-starterdata-maven-plugin</artifactId>
                <version>1.0.0-SNAPSHOT</version>
                <configuration>
                    <namespaceString>${loinc.origin.namespace}</namespaceString>
                    <datastorePath>${dataStoreLocation}/${dataStore}</datastorePath>
                </configuration>
                <executions>
                    <execution>
                        <id>run-loinc-starterdata</id>
                        <phase>install</phase>
                        <goals>
                            <goal>run-loinc-starterdata</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>dev.ikm.loinc</groupId>
                <artifactId>loinc-transformation-maven-plugin</artifactId>
                <version>1.0.0-SNAPSHOT</version>
                <configuration>
                    <namespaceString>${loinc.origin.namespace}</namespaceString>
                    <datastorePath>${dataStoreLocation}/${dataStore}</datastorePath>
                    <inputDirectoryPath>${user.home}/.m2/repository/dev/ikm/loinc/loinc-origin/${project.version}/loinc-origin-${project.version}-data.zip</inputDirectoryPath>
                    <dataOutputPath>${project.build.directory}/loinc</dataOutputPath>
                </configuration>
                <executions>
                    <execution>
                        <id>run-loinc-transformation</id>
                        <phase>install</phase>
                        <goals>
                            <goal>run-loinc-transformation</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- RxNorm -->
            <plugin>
                <groupId>dev.ikm.rxnorm</groupId>
                <artifactId>rxnorm-transformation-maven-plugin</artifactId>
                <version>1.0.0-SNAPSHOT</version>
                <configuration>
                    <namespaceString>${rxnorm.origin.namespace}</namespaceString>
                    <rxnormOwl>${project.build.directory}/rxnorm/src/${rxnormOwl}</rxnormOwl>
                    <datastorePath>${dataStoreLocation}/${dataStore}</datastorePath>
                    <inputDirectoryPath>${user.home}/.m2/repository/dev/ikm/rxnorm/rxnorm-origin/${project.version}/rxnorm-origin-${project.version}-data.zip</inputDirectoryPath>
                    <dataOutputPath>${project.build.directory}/rxnorm</dataOutputPath>
                </configuration>
                <executions>
                    <execution>
                        <id>run-rxnorm-transformation</id>
                        <phase>install</phase>
                        <goals>
                            <goal>run-rxnorm-transformation</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- GUDID -->
            <plugin>
                <groupId>dev.ikm.gudid</groupId>
                <artifactId>gudid-transformation-maven-plugin</artifactId>
                <version>1.0.0-SNAPSHOT</version>
                <configuration>
                    <namespaceString>${gudid.origin.namespace}</namespaceString>
                    <datastorePath>${dataStoreLocation}/${dataStore}</datastorePath>
                    <inputDirectoryPath>${user.home}/.m2/repository/dev/ikm/gudid/gudid-origin/${project.version}/gudid-origin-${project.version}-data.zip</inputDirectoryPath>
                    <dataOutputPath>${project.build.directory}/gudid</dataOutputPath>
                </configuration>
                <executions>
                    <execution>
                        <id>run-gudid-transformation</id>
                        <phase>install</phase>
                        <goals>
                            <goal>run-gudid-transformation</goal>
                        </goals>
                        <configuration>
                            <!-- Specify medical specialty codes to INCLUDE in transformation -->
                            <medicalSpecialties>
                                <medicalSpecialty>${gudid.medicalSpecialtyFlag}</medicalSpecialty>
                                <medicalSpecialty>CV</medicalSpecialty>
                                <medicalSpecialty>CH</medicalSpecialty>
                                <medicalSpecialty>TX</medicalSpecialty>
                                <medicalSpecialty>HE</medicalSpecialty>
                                <medicalSpecialty>IM</medicalSpecialty>
                                <medicalSpecialty>MI</medicalSpecialty>
                                <medicalSpecialty>PA</medicalSpecialty>
                            </medicalSpecialties>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>

    <dependencies>
        <dependency>
            <groupId>dev.ikm.tinkar</groupId>
            <artifactId>terms</artifactId>
            <version>${tinkar-core.version}</version>
        </dependency>
    </dependencies>

</project>